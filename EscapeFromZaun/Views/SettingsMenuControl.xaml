<UserControl x:Class="EscapeFromZaun.Views.SettingsMenuControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EscapeFromZaun.Views"
             xmlns:vms="clr-namespace:EscapeFromZaun.ViewModels"
             xmlns:controllers="clr-namespace:EscapeFromZaun.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" SizeChanged="UserControl_SizeChanged"
             >
    <UserControl.DataContext>
        <vms:SettingsMenuWindowViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <controllers:BoolToBrushConverter x:Key="c"/>
        <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="MyButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                        BorderThickness="1"
                        Padding="4,2" 
                        CornerRadius="3" 
                        Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="1" BorderBrush="Black" Background="Black" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="#e5c179"  BorderThickness="1" BorderBrush="#e5c179" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle Width="50" Height="50" >
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/Views/Images/SliderButton.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="23*"/>
            <RowDefinition Height="49*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="116*"/>
            <RowDefinition Height="252*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="34*"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="332*"/>
            <ColumnDefinition Width="362*"/>
            <ColumnDefinition Width="37*"/>
        </Grid.ColumnDefinitions>



        <MediaElement Name="myMediaElement" Grid.Column="0" Grid.ColumnSpan="5" Grid.RowSpan="5" Grid.Row="0" Stretch="Fill">
            <MediaElement.Triggers>
                <EventTrigger RoutedEvent="MediaElement.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>


                                <!--The MediaTimeline has a RepeatBehavior="Forever" which makes the media play
                     over and over indefinitely.-->

                                <MediaTimeline
                                    Source="Views/Animation/SettingsMenu.mp4"
                                    Storyboard.TargetName="myMediaElement"  
                                    RepeatBehavior="Forever" />

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </MediaElement.Triggers>
        </MediaElement>
        <!--<Image Source="/Views/Images/wallpaperbetter.com_1920x1080 (8).jpg" Grid.ColumnSpan="5" Grid.RowSpan="5" Stretch="Fill"/>-->
        <Grid Grid.Column="3" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="224*"/>
                <ColumnDefinition Width="75*"/>
                <ColumnDefinition Width="35*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="1.5*"/>
            </Grid.RowDefinitions>
            <Label Content="Sound Effects" FontWeight="Bold" FontSize="45" FontFamily="Bookman Old Style">
                <Label.Foreground>
                    <LinearGradientBrush>
                        <GradientStop Color="#ca9c4b"/>
                        <GradientStop Color="#e5c179"/>
                    </LinearGradientBrush>
                </Label.Foreground>
            </Label>
            <Label Content="Music" FontWeight="Bold" FontSize="45" FontFamily="Bookman Old Style" Grid.Column="0" Grid.Row="1">
                <Label.Foreground>
                    <LinearGradientBrush>
                        <GradientStop Color="#ca9c4b"/>
                        <GradientStop Color="#e5c179"/>
                    </LinearGradientBrush>
                </Label.Foreground>
            </Label>
            <Label Content="Move Animation" FontWeight="Bold" FontSize="45" FontFamily="Bookman Old Style" Grid.Row="2">
                <Label.Foreground>
                    <LinearGradientBrush>
                        <GradientStop Color="#ca9c4b"/>
                        <GradientStop Color="#e5c179"/>
                    </LinearGradientBrush>
                </Label.Foreground>
            </Label>
            <Slider Style="{StaticResource Horizontal_Slider}" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" Minimum="0" Maximum="1" Background="#ca9c4b" Foreground="AliceBlue" HorizontalContentAlignment="Center"/>
            <Slider Style="{StaticResource Horizontal_Slider}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Value="{Binding _backgroundLogic.mp.Volume}" IsEnabled="{Binding NotMuted}" Minimum="0" Maximum="1" Background="#ca9c4b" Foreground="AliceBlue" HorizontalContentAlignment="Center" 
                    Orientation="Horizontal" />
            <CheckBox Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" Background="{x:Null}" FontSize="30">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="4" ScaleY="4"/>
                </CheckBox.LayoutTransform>
            </CheckBox>
            <Button Grid.Column="2" Grid.Row="0" BorderThickness="0" Background="{Binding Muted, Converter={StaticResource c}}" Style="{StaticResource MyButtonStyle}"></Button>
            <Button Grid.Column="2" Grid.Row="1" BorderThickness="0" Background="{Binding Muted, Converter={StaticResource c}}" Command="{Binding MuteCommand}" Style="{StaticResource MyButtonStyle}"></Button>
        </Grid>
        <Button Background="{x:Null}" Grid.Row="1" Grid.Column="1" Command="{Binding BackToMenuCommand}" Style="{StaticResource MyButtonStyle}">
            <Image Source="/Views/Images/Arrow.png"/>
        </Button>
    </Grid>
</UserControl>
